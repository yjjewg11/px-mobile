<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">

	<description>Spring公共配置</description>
	 
	
	<!-- 定义受环境影响易变的变量 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:/conf.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 定义受环境影响易变的变量 -->
	<bean id="appProperty" class="org.springframework.beans.factory.config.PropertiesFactoryBean">		
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath*:/conf.properties</value>
			</list>
		</property>
	</bean>
	
	
	
	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.company.news" use-default-filters="true">
		<context:exclude-filter type="regex" expression=".*Controller$" />
	</context:component-scan>
	 <bean id="JSPviewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">   
          <property name="cache" value="false"/>   
          <property name="prefix" value="/WEB-INF/jsp/"/>   
          <property name="suffix" value=".jsp"/>   
          <property name="contentType"><value>text/html;charset=UTF-8</value></property>   
          <property name="order"><value>1</value></property>   
    </bean>  

<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
	<bean id="jdbcDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" lazy-init="true">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="defaultAutoCommit" value="false" />
	</bean>
	
		
<!-- Hibernate配置 -->
<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="${dataSource.type}" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<!-- 解决hibernate 中的Jar包与应用服务器冲突//-->
				<prop key="hibernate.validator.apply_to_ddl">false</prop> 
				<prop key="hibernate.validator.autoregister_listeners">false</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.company.news.entity." />
</bean>

    <!-- 事务管理器配置, Hibernate单数据源事务 -->
	<bean id="defaultTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	 <!-- 使用annotation定义事务 -->
    <!-- tx:annotation-driven transaction-manager="defaultTransactionManager" proxy-target-class="true" /> -->
    
    
<bean id="defaultLobHandler" lazy-init="true" class="org.springframework.jdbc.support.lob.DefaultLobHandler"/>
<bean id="simpleNativeJdbcExtractor" lazy-init="true" class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor"/>
    
    <!-- 配置事务特性 -->  
<tx:advice id="serviceAdvice"  
    transaction-manager="defaultTransactionManager">  
    <tx:attributes>  
        <tx:method name="index*" read-only="true"/>  
        <tx:method name="show*" read-only="true"/>  
        <tx:method name="operate*" read-only="true"/>  
        <tx:method name="edit*" read-only="true"/>
        
        <tx:method name="*" propagation="REQUIRED" rollback-for="Throwable"/>  
    </tx:attributes>  
</tx:advice>  

    <!-- 配置哪些类的方法需要进行事务管理 -->  
<aop:config proxy-target-class="true">  
    <aop:pointcut id="servicePointcut"  expression="execution(* com.company.news.service..*.*(..))"/>  
    <aop:advisor pointcut-ref="servicePointcut" advice-ref="serviceAdvice"/>  
</aop:config>  

<bean class="com.company.common.SpringContextHolder" lazy-init="false"></bean>


 	<!-- ====================== 缓存 ======================= -->

	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation">
			<value>classpath:ehcache.xml</value>
		</property>
	</bean>

	<bean id="dbDataCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager">
			<ref local="cacheManager" />
		</property>
		<!-- 使用缓存 关联ehcache.xml中的缓存配置 -->
    <property name="cacheName" value="dbDataCache" />
	</bean>
</beans>